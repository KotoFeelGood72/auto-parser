const { startBrowser } = require('../utils/browser');

async function scrapeCarDetails(url) {
    const browser = await startBrowser();
    const page = await browser.newPage();

    try {
        console.log(`üöó –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ ${url}`);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏
        await page.setExtraHTTPHeaders({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
        });

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –∏ –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
        await page.goto(url, {
            waitUntil: 'domcontentloaded',
            timeout: 90000,
        });

        console.log('üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ...');

        // –ñ–¥—ë–º, –ø–æ–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è —Ü–µ–Ω–∞ (—á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å)
        await page.waitForSelector('[data-testid="listing-price"]', { timeout: 30000 });

        // –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ
        const title = await page.$eval('[data-testid="listing-sub-heading"]', el => el.innerText.trim());
        // const make = await page.$eval('[data-testid="listing-sub-heading"]', el => el.innerText.split(" ")[0].trim());
        // const model = await page.$eval('[data-testid="listing-sub-heading"]', el => el.innerText.split(" ")[1].trim());
        // const year = await page.$eval('[data-testid="listing-year-value"]', el => el.innerText.trim());
        // const bodyType = await page.$eval('[data-testid="listing-regional_specs-value"]', el => el.innerText.trim());
        // const horsepower = 'Unknown'; // –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å–µ–ª–µ–∫—Ç–æ—Ä
        // const fuelType = await page.$eval('[data-testid="listing-regional_specs-value"]', el => el.innerText.includes('Electric') ? 'Electric' : 'Petrol/Diesel');
        // const kilometers = await page.$eval('[data-testid="listing-kilometers-value"]', el => el.innerText.trim().replace(/\D/g, ''));
        // const exteriorColor = 'Unknown'; // –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä
        // const location = await page.$eval('.MuiBox-root.mui-style-16dxzu1', el => el.innerText.trim());

        const priceFormatted = await page.$eval('[data-testid="listing-price"] span', el => el.innerText.trim().replace("AED", "").trim());
        const priceRaw = parseFloat(priceFormatted.replace(/,/g, ''));
        const currency = "AED";

        // –ö–æ—Ä–æ—Ç–∫–∞—è —Å—Å—ã–ª–∫–∞ (–º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é, –µ—Å–ª–∏ –µ—Å—Ç—å)
        const shortUrl = url;

        // –ü–∞—Ä—Å–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        // const photos = await page.$$eval('.MuiBox-root img', imgs => imgs.map(img => img.src));

        const carDetails = {
            // short_url: shortUrl,
            title,
            // photos,
            // make,
            // model,
            // year,
            // generation: "", // –ù–µ –Ω–∞–π–¥–µ–Ω —Å–µ–ª–µ–∫—Ç–æ—Ä
            // body_type: bodyType,
            // horsepower,
            // fuel_type: fuelType,
            // motors_trim: "Sport", // –ü–æ–∫–∞ –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–º - –æ–±–Ω–æ–≤–∏–º
            // kilometers,
            price: {
                formatted: priceFormatted,
                raw: priceRaw,
                currency,
            },
            // exterior_color: exteriorColor,
            // location,
        };

        console.log(carDetails);
        return carDetails;
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å ${url}:`, error);
        return null;
    } finally {
        await browser.close();
    }
}

module.exports = { scrapeCarDetails };